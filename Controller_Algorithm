if there is no FTP_flow{
	Video_flow uses slice 2 and 3
	otherwise 
	only slice 2
	if there is no Video_flow and{
		other_flow uses slice 1 and 2
        else if there is no Video_flow and FTP_flow{
            other uses all slices 
            otherwise 
            only slice 1


while (FTP_flow=true){
	lock1=on for 60 sec
	add_flow to slice 3
	flow hard timeout every 55sec
	if (FTP_flow=false){
        flow idle timeout after 5 sec
		lock1=off after 60 sec
			
while (video_flow=true){
	lock2=on for 60 sec
	if lock1=on{
        add_flow to slice 2
        else if lock= off{
            add_flow to slice 2 and 3
            flow idle timeout after 5 sec
            flow hard timeout every 55sec
            if (video_flow=false){
                flow idle timeout after 5 sec
                lock2=off after 60 sec
	
while (other_flow=ture){
	if lock2=on{
        add_flow to slice 1
        else if lock2=off{
            add_flow to slice 1 and 2
            else if lock2=off and lock1=0{
                add flow to slice 1 and 2 and 3
                flow hard timeout every 55sec
                if(other_flow=false){
                    flow idle timeout after 5 sec

the Locks algorithm:

def locker():
        global lock
        global time
        while time > 0:
            lock=1
            time=time-1
            sleep(1)
            while time == 0:
                lock=0
                sleep(1)

t = threading.Thread(target = locker)
t.start()